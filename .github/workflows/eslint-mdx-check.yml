name: Check ESLint for MDX Files

on:
  pull_request_target:
    paths:
      - '**/*.mdx'

jobs:
  eslint-mdx:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.14.0'

    - name: Install dependencies
      run: |
        npm install

    - name: Install ESLint and plugins
      run: |
        npm install eslint@9.7.0 eslint-plugin-mdx @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-plugin-react eslint-plugin-react-hooks eslint-plugin-jsx-a11y eslint-plugin-import --save-dev

    - name: Configure ESLint
      run: |
        echo '{
          "extends": [
            "eslint:recommended",
            "plugin:react/recommended",
            "plugin:@typescript-eslint/recommended",
            "plugin:jsx-a11y/recommended",
            "plugin:import/errors",
            "plugin:import/warnings",
            "plugin:import/typescript",
            "plugin:mdx/recommended"
          ],
          "plugins": ["mdx"],
          "settings": {
            "react": {
              "version": "detect"
            }
          },
          "parser": "@typescript-eslint/parser",
          "parserOptions": {
            "ecmaFeatures": {
              "jsx": true
            }
          },
          "rules": {
            "react/prop-types": "off",
            "@typescript-eslint/no-unused-vars": "error"
          }
        }' > .eslintrc.json

    - name: Get list of changed .mdx files
      id: changed_files
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Fetching PR details..."
        PR_NUMBER=$(jq -r .number < "$GITHUB_EVENT_PATH")
        REPO_FULL_NAME=$(jq -r .pull_request.base.repo.full_name < "$GITHUB_EVENT_PATH")
        echo "PR Number: $PR_NUMBER"
        echo "Repository: $REPO_FULL_NAME"
        RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/$REPO_FULL_NAME/pulls/$PR_NUMBER/files")
        echo "GitHub API response: $RESPONSE"
        CHANGED_FILES=$(echo "$RESPONSE" | jq -r '.[] | select(.filename | endswith(".mdx")) | .filename')
        echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV
        echo "Changed files: $CHANGED_FILES"

    - name: Run ESLint on changed .mdx files
      id: eslint_check
      env:
        CHANGED_FILES: ${{ env.CHANGED_FILES }}
      run: |
        echo "Running ESLint"
        if [ -z "$CHANGED_FILES" ]; then
          echo "No .mdx files changed."
        else
          echo "Running ESLint with files: $CHANGED_FILES"
          npx eslint $CHANGED_FILES
        fi

    - name: Print ESLint results
      if: failure()
      run: |
        echo "ESLint check failed. See above for details."
